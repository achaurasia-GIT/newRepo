package APITesting.com.org.api;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.jayway.restassured.http.ContentType;
import com.jayway.restassured.response.Response;

import APITesting.org.classes.PostRequest;
import net.minidev.json.JSONObject;

import static com.jayway.restassured.RestAssured.*;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL; 

public class JsonServerRequest {



	//@Test  
	public void PostAsString(){
		Response resp = given().
				body("   {\"id\":\"2\","
						+ " \"title\":\"WFH\","
						+ " \"author\":\"ALok\"  }"

						).
				when().
				contentType(ContentType.JSON).
				post("http://localhost:3000/posts");

		System.out.println(resp.asString());
		Assert.assertEquals(resp.getStatusCode(), 201);




	}


	//@Test  
	public void test1(){
		Response resp = when().
				get("http://localhost:3000/posts");

		System.out.println(resp.asString());
		Assert.assertEquals(resp.getStatusCode(), 200);




	}
	//Post
	@Test  
	public void POST(){

/*		PostRequest posReq = new PostRequest(); 

		posReq.setId("3");
		posReq.setauthor("newAuthor");
		posReq.settitle("newest title");

		Response resp =
				given().
				when().
				contentType(ContentType.JSON).
				body(posReq).
				post("http://localhost:3000/posts");


		System.out.println(resp.asString());
		Assert.assertEquals(resp.getStatusCode(), 201);*/

		
		/* initialize an object */
		JSONObject paytmParams = new JSONObject();

		/* Enter user's 10 digit mobile number */
		paytmParams.put("phone", "9655882845");

		/* Enter your client id here */
		paytmParams.put("clientId", "_yKSVHEbfVvCIUE7");

		/* enter resource scope */
		paytmParams.put("scope", "wallet");

		/* enter response type, the value here will be 'token' */
		paytmParams.put("responseType", "token");

		/* prepare JSON string for request */
		String post_data = paytmParams.toString();

		/* for Staging */
		

		/* for Production */
		// URL url = new URL("https://accounts.paytm.com/signin/otp");

		try {
			
			URL url = new URL("https://accounts-uat.paytm.com/signin/otp");
			
		    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
		    connection.setRequestMethod("POST");
		    connection.setRequestProperty("Content-Type", "application/json");
		    connection.setDoOutput(true);

		    DataOutputStream requestWriter = new DataOutputStream(connection.getOutputStream());
		    requestWriter.writeBytes(post_data);
		    requestWriter.close();
		    String responseData = "";
		    InputStream is = connection.getInputStream();
		    BufferedReader responseReader = new BufferedReader(new InputStreamReader(is));
		    if ((responseData = responseReader.readLine()) != null) {
		        System.out.append("Response: " + responseData);
		    }
		    // System.out.append("Request: " + post_data);
		    responseReader.close();
		} catch (Exception exception) {
		    exception.printStackTrace();
		}



	}
	
	//PUT       /Posts/1
	//@Test  
	public void PUT(){

		PostRequest posReq = new PostRequest(); 

		posReq.setId("4");
		posReq.setauthor("Charan");
		posReq.settitle("jhjh");

		Response resp =
				given().
				when().
				contentType(ContentType.JSON).
				body(posReq).
				put("http://localhost:3000/posts/3");


		System.out.println(resp.asString());
		Assert.assertEquals(resp.getStatusCode(), 200);




	}
	//Delete /post/1
//	@Test  
	public void DELETE(){

/*
		Response resp =
				given().
				when().
				delete("http://localhost:3000/posts/3");


		System.out.println(resp.asString());
		Assert.assertEquals(resp.getStatusCode(), 200);*/

			
		

/* initialize an object */
JSONObject paytmParams = new JSONObject();

/* body parameters */
JSONObject body = new JSONObject();

/* payment mode for which you need to fetch balance */
body.put("paymentMode", "PAYMENT_MODE");

/* head parameters */
JSONObject head = new JSONObject();

/* put transaction token here, this is same token which was generated by Initiate Transaction API */
head.put("txnToken", "TRANSACTION_TOKEN");

/* prepare JSON string for request */
paytmParams.put("body", body);
paytmParams.put("head", head);
String post_data = paytmParams.toString();

/* for Staging */


/* for Production */
// URL url = new URL("https://securegw.paytm.in/userAsset/fetchBalanceInfo?mid=YOUR_MID_HERE&orderId=YOUR_ORDER_ID");

try {
	/* for Staging */
	URL url = new URL("https://securegw-stage.paytm.in/userAsset/fetchBalanceInfo?mid=cplwiq46947397383647&orderId=@3456754");
	
    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    connection.setRequestMethod("POST");
    connection.setRequestProperty("Content-Type", "application/json");
    connection.setDoOutput(true);

    DataOutputStream requestWriter = new DataOutputStream(connection.getOutputStream());
    requestWriter.writeBytes(post_data);
    requestWriter.close();
    String responseData = "";
    InputStream is = connection.getInputStream();
    BufferedReader responseReader = new BufferedReader(new InputStreamReader(is));
    if ((responseData = responseReader.readLine()) != null) {
        System.out.append("Response: " + responseData);
    }
    // System.out.append("Request: " + post_data);
    responseReader.close();
} catch (Exception exception) {
    exception.printStackTrace();
}       
        

	}
	
	
	
	

}
